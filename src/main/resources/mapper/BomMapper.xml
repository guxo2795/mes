<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.wimir.bae.domain.bom.mapper.BomMapper">

    <!-- BOM 중복 검사 -->
    <select id="isExistBom" resultType="boolean">
        SELECT IF(COUNT(*) > 0, true, false)
        FROM tbl_product_bom
        WHERE is_deleted = 0
          AND finished_key = #{finishedKey}
          AND material_key = #{materialKey}
    </select>

    <!-- BOM 등록 -->
    <insert id="createBom">
        INSERT INTO tbl_product_bom(
            root_key, finished_key, material_key, quantity
        )
        VALUES (
            #{rootKey}, #{finishedKey}, #{materialKey}, #{quantity}
        )
    </insert>

    <resultMap id="BomProductsResultMap" type="com.wimir.bae.domain.bom.dto.BomProductsDTO">
        <id property="rootKey" column="root_key"/>
        <result property="finishedKey" column="finished_key"/>
        <result property="finishedCode" column="finished_code"/>
        <result property="finishedName" column="finished_name"/>

        <collection property="materials" ofType="com.wimir.bae.domain.bom.dto.BomMaterialDTO">
            <id property="bomKey" column="bom_key" />
            <result property="materialKey" column="material_key"/>
            <result property="materialCode" column="material_code"/>
            <result property="materialName" column="material_name"/>
            <result property="quantity" column="quantity"/>
            <result property="unitName" column="unit_name"/>
        </collection>
    </resultMap>

    <!-- BOM 목록 -->
    <select id="getBomList" resultMap="BomProductsResultMap">
    SELECT
        bom.root_key,
        bom.finished_key,
        fp.product_code AS finished_code,
        fp.product_name AS finished_name,
        bom.bom_key,
        bom.material_key,
        mp.product_code AS material_code,
        mp.product_name AS material_name,
        bom.quantity,
        sub.sub_common_name AS unit_name
    FROM tbl_product_bom bom
        LEFT JOIN tbl_product fp ON bom.finished_key = fp.product_key
        LEFT JOIN tbl_product mp ON bom.material_key = mp.product_key
        LEFT JOIN tbl_common_code_sub sub ON mp.unit_key = sub.sub_common_key
    WHERE bom.is_deleted = 0
        AND fp.is_deleted = 0
        AND mp.is_deleted = 0
        AND sub.is_deleted = 0
        <if test="finishedKey != null and finishedKey != ''">
            AND bom.fisished_key = #{finishedKey}
        </if>
        <if test="productCode != null and productCode != ''">
            AND mp.product_code LIKE CONCAT('%',#{productCode},'%')
        </if>
        <if test="productName != null and productName != ''">
            AND mp.product_name LIKE CONCAT('%',#{productName},'%')
        </if>
        <choose>
            <when test="sort == null or sort == ''">
                ORDER BY bom.root_key,bom.finished_key,bom.bom_key DESC
            </when>
            <otherwise>
                ${sort}
            </otherwise>
        </choose>
        <if test="offset != null and offset != ''">
            LIMIT ${record} OFFSET ${offset}
        </if>
    </select>

    <select id="getBomInfoList" resultType="com.wimir.bae.domain.bom.dto.BomInfoDTO">
        SELECT *
        FROM tbl_product_bom
        WHERE is_deleted = 0
        AND bom_key IN
        <foreach item="bomKey" collection="bomKeyList" open="(" separator="," close=")">
            #{bomKey}
        </foreach>
    </select>

    <!-- BOM 정보 -->
    <select id="getBomInfo" resultType="com.wimir.bae.domain.bom.dto.BomInfoDTO">
        SELECT *
        FROM tbl_product_bom
        WHERE is_deleted = 0
          AND bom_key = #{bomKey}
    </select>

    <!-- BOM 수정 -->
    <update id="updateBom">
        UPDATE tbl_product_bom
        SET quantity = #{quantity}
        WHERE is_deleted = 0
          AND bom_key = #{bomKey}
    </update>

    <!-- BOM 삭제 -->
    <delete id="deleteBomList">
        UPDATE tbl_product_bom
        SET is_deleted = 1
        WHERE is_deleted = 0
        AND bom_key IN
        <foreach item="bomKey" collection="bomKeyList" open="(" separator="," close=")">
            #{bomKey}
        </foreach>
    </delete>

    <select id="isBomChildList" resultType="boolean">
        WITH RECURSIVE input_keys AS (
        <foreach collection="materialRootKeyList" item="item" separator="UNION ALL">
            SELECT #{item.materialKey} AS material_key, #{item.rootKey} AS root_key
        </foreach>
        ),
        bom_tree AS (
        SELECT b.material_key, b.finished_key, b.root_key, 1 AS level
        FROM tbl_product_bom b
        JOIN input_keys ik ON b.finished_key = ik.material_key AND b.root_key = ik.root_key
        WHERE b.is_deleted = 0

        UNION ALL

        SELECT b2.material_key, b2.finished_key, b2.root_key, bt.level + 1
        FROM bom_tree bt
        JOIN tbl_product_bom b2 ON bt.material_key = b2.finished_key AND bt.root_key = b2.root_key
        WHERE b2.is_deleted = 0
        )
        SELECT IF(COUNT(*) > 0, TRUE, FALSE)
        FROM bom_tree
    </select>

    <select id="isBomContractAndOrder" resultType="boolean">
        SELECT IF(COUNT(*) > 0, 1, 0)
        FROM tbl_product_bom bom
            LEFT JOIN tbl_product pro ON pro.product_key = bom.root_key
            LEFT JOIN tbl_order_contract_materials conm ON pro.product_key = conm.product_key
            LEFT JOIN tbl_order_contract con ON con.contract_code = conm.contract_code
        WHERE bom.is_deleted = 0
          AND bom.bom_key = #{bomKey}
          AND pro.is_deleted = 0
          AND conm.is_deleted = 0
          AND con.is_deleted = 0
          AND con.is_completed IN(0,2)
    </select>

</mapper>