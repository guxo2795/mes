<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">


<mapper namespace="com.wimir.bae.domain.contract.mapper.ContractMapper">

    <!--  수주 등록   -->
    <insert id="createContract" useGeneratedKeys="true" keyProperty="contractCode" keyColumn="contract_code">
        INSERT INTO tbl_order_contract(
            company_key, contract_name, contract_date, delivery_date
        ) VALUES (
                     #{companyKey}, #{contractName}, #{contractDate}, #{deliveryDate}
                 )
    </insert>

    <!-- 수주 품목 등록   -->
    <insert id="createContractMaterials" >
        INSERT INTO tbl_order_contract_materials(
            contract_code, product_key, quantity
        ) VALUES (
                     #{contractCode}, #{productKey}, #{quantity}
                 )
    </insert>

    <insert id="insertMaterial" useGeneratedKeys="true" keyColumn="contract_material_key" keyProperty="contractMaterialKey">
        INSERT INTO tbl_order_contract_materials (
            contract_code, product_key, quantity
        ) VALUES (
                     #{contractCode}, #{productKey}, #{quantity}
                 )
    </insert>

    <!--  수주 리스트  -->
    <select id="getContractList" resultType="com.wimir.bae.domain.contract.dto.ContractInfoDTO">
        SELECT
        con.contract_code,
        com.company_key,
        com.company_name,
        con.contract_name,
        con.contract_date,
        con.delivery_date,
        con.is_completed,
        pro.product_key,
        pro.product_code,
        pro.product_name,
        cmat.quantity,
        pro.safety_quantity,
        con.is_deleted,
        pro.asset_type_flag,
        sub.sub_common_name AS unitName
        FROM tbl_order_contract con
        LEFT JOIN tbl_company com ON con.company_key = com.company_key
        LEFT JOIN tbl_order_contract_materials cmat ON con.contract_code = cmat.contract_code
        LEFT JOIN tbl_product pro ON pro.product_key = cmat.product_key
        LEFT JOIN tbl_common_code_sub sub ON sub.sub_common_key = pro.unit_key
        WHERE con.is_deleted = 0
    </select>

    <!--  수주 정보  -->
    <select id="getContractInfo" resultType="com.wimir.bae.domain.contract.dto.ContractInfoDTO">
        SELECT *
        FROM tbl_order_contract
        WHERE is_deleted = 0
          AND contract_code = #{contractCode}
    </select>

    <!--  수주 수정  -->
    <update id="updateContract">
        UPDATE tbl_order_contract
        SET contract_name = #{contractName},
            contract_date = #{contractDate},
            delivery_date = #{deliveryDate}
        WHERE is_completed = 0
          AND is_deleted = 0
          AND contract_code = #{contractCode}
    </update>

    <!--  수주 품목 수정  -->
    <update id="updateContractMaterial">
        UPDATE tbl_order_contract_materials
        SET product_key = #{productKey},
            quantity = #{quantity}
        WHERE contract_code = #{contractCode}
    </update>

    <!--  수주 삭제  -->
    <delete id="deletedContract">
        UPDATE tbl_order_contract
        SET is_deleted = 1
        WHERE
            is_deleted = 0
          AND contract_code = #{contractCode}
    </delete>

    <!-- 수주 실행   -->
    <update id="startContract">
        UPDATE tbl_order_contract
        SET is_completed = 2
        WHERE
            is_deleted = 0
          AND is_completed = 0
          AND contract_code = #{contractCode}
    </update>

    <!-- 수주 완료   -->
    <update id="completeContract">
        UPDATE tbl_order_contract
        SET is_completed = 1
        WHERE
            is_deleted = 0
          AND is_completed = 2
          AND contract_code = #{contractCode}
    </update>

    <!--  수주 품목 전체 삭제  -->
    <delete id="deletedContractAllMaterials">
        UPDATE tbl_order_contract_materials
        SET is_deleted = 1
        WHERE is_deleted = 0
          AND contract_code = #{contractCode}
    </delete>

    <select id="listContractMaterial" resultType="com.wimir.bae.domain.contract.dto.ContractMaterialInfoDTO">
        SELECT
            con.contract_code,
            material_bom.product_key,
            material_bom.product_name,
            material_bom.product_code,
            (cmat.quantity * bom.quantity) as quantity

        FROM tbl_order_contract con
                 LEFT JOIN tbl_order_contract_materials cmat
                           ON cmat.contract_code = con.contract_code
                 LEFT JOIN tbl_product pro
                           ON pro.product_key = cmat.product_key
                 LEFT JOIN tbl_product_bom bom
                           ON bom.finished_key = pro.product_key
                 LEFT JOIN tbl_product material_bom
                           ON material_bom.product_key = bom.material_key
        WHERE
            con.is_deleted = 0
          AND material_bom.process_type_key = #{processTypeKey}
          AND cmat.is_deleted = 0
          AND pro.is_deleted = 0
          AND bom.is_deleted = 0
          AND pro.asset_type_flag = 'F'
          AND con.contract_code = #{contractCode}
    </select>

    <!-- 창고키, 품목키를 활용하여 창고 수량 가지고 오기 -->
    <select id="getAvailableInventoryAsString" resultType="java.lang.String">
        SELECT quantity
        FROM tbl_inventory
        WHERE product_key = #{productKey}
          AND warehouse_key = #{warehouseKey}
    </select>

    <!-- 창고 수량 업데이트   -->
    <update id="updateInventoryAsString">
        UPDATE tbl_inventory
        SET quantity =  #{updatedInventoryStr}
        WHERE product_key = #{productKey}
          AND warehouse_key = #{warehouseKey}
    </update>

    <!-- 수주 자재 키 값 가지고 오기  -->
    <select id="selectContractMaterialKey" resultType="string" parameterType="com.wimir.bae.domain.contract.dto.ContractMaterialDBDTO">
        SELECT contract_material_key
        FROM tbl_order_contract_materials
        WHERE product_key = #{productKey}
          AND contract_code = #{contractCode}
          AND is_deleted = 0
    </select>

    <!--  outgoing 테이블 저장  -->
    <insert id="insertOutgoingRecord">
        INSERT INTO tbl_outgoing (
            product_key,
            warehouse_key,
            material_key,
            outgoing_type_flag,
            outgoing_date_time,
            quantity,
            note
        ) VALUES (
                     #{productKey},
                     #{warehouseKey},
                     #{materialKey},
                     #{releaseType},
                     CURRENT_TIMESTAMP,
                     #{quantity},
                     #{note}
                 );
    </insert>
</mapper>